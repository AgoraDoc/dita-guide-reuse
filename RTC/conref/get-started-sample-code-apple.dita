<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="get-started-sample-code">
    <title>Get started sample code</title>
    <body>
        <section>
            <title>Video</title>
            <p id="init-video">
                <codeblock outputclass="language-swift">func initializeAndJoinChannel() {
  // Pass in your App ID here
  agoraKit = AgoraRtcEngineKit.sharedEngine(withAppId: "Your App ID", delegate: self)
  // Video is disabled by default. You need to call enableVideo to start a video stream.
  agoraKit?.enableVideo()
  // Create a videoCanvas to render the local video
  let videoCanvas = AgoraRtcVideoCanvas()
  videoCanvas.uid = 0
  videoCanvas.renderMode = .hidden
  videoCanvas.view = localView
  agoraKit?.setupLocalVideo(videoCanvas)
  // Join the channel with a token. Pass in your token and channel name here
  agoraKit?.joinChannel(byToken: "Your token", channelId: "Channel name", info: nil, uid: 0, joinSuccess: { (channel, uid, elapsed) in
  })
}</codeblock>
                </p>
        </section>
         <section>
             <title>Live Streaming Premium</title>
             <p id="init-live">
                 <codeblock outputclass="language-swift">func initializeAndJoinChannel() {
  // Pass in your App ID here
  agoraKit = AgoraRtcEngineKit.sharedEngine(withAppId: "Your App ID", delegate: self)
  // For a live streaming scenario, set the channel profile as liveBroadcasting.
  agoraKit?.setChannelProfile(.liveBroadcasting)
  // Set the client role as broadcaster or audience.
  agoraKit?.setClientRole(.broadcaster)
  // Video is disabled by default. You need to call enableVideo to start a video stream.
  agoraKit?.enableVideo()
  // Create a videoCanvas to render the local video
  let videoCanvas = AgoraRtcVideoCanvas()
  videoCanvas.uid = 0
  videoCanvas.renderMode = .hidden
  videoCanvas.view = localView
  agoraKit?.setupLocalVideo(videoCanvas)
  // Join the channel with a token. Pass in your token and channel name here
  agoraKit?.joinChannel(byToken: "Your token", channelId: "Channel name", info: nil, uid: 0, joinSuccess: { (channel, uid, elapsed) in
  })
}</codeblock>
                 </p>
         </section>
        <section>
            <title>Video-Cocoapods-iOS</title>
            <p id="video-cocoapods-ios">
                <codeblock outputclass="language-swift"># platform :ios, '9.0'
target 'Your App' do
    pod 'AgoraRtcEngine_iOS', 'version'
end</codeblock>
            </p>
        </section>
        <section>
            <title>Audio-Cocoapods-iOS</title>
            <p id="audio-cocoapods-ios">
                <codeblock outputclass="language-swift"># platform :ios, '9.0'
target 'Your App' do
    pod 'AgoraAudio_iOS', 'version'
end</codeblock>
            </p>
        </section>
        <section>
            <title>Cocoapods-macOS</title>
            <p id="cocoapods-mac">
                <codeblock outputclass="language-swift"># platform :macos, '10.11'
target 'Your App' do
pod 'AgoraRtcEngine_macOS', 'version'
end</codeblock>
            </p>
        </section>
    </body>
</topic>
